Name:           perl-Class-Loader
Version:        2.03
Release:        1%{?dist}
Summary:        Load modules and create objects on demand
License:        CHECK(GPL+ or Artistic)
Group:          Development/Libraries
URL:            http://search.cpan.org/dist/Class-Loader/
Source0:        http://www.cpan.org/authors/id/V/VI/VIPUL/Class-Loader-%{version}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildArch:      noarch
BuildRequires:  perl(ExtUtils::MakeMaker)
Requires:       perl(:MODULE_COMPAT_%(eval "`%{__perl} -V:version`"; echo $version))

%description
Certain applications like to defer the decision to use a particular module
till runtime. This is possible in perl, and is a useful trick in situations
where the type of data is not known at compile time and the application
doesn't wish to pre-compile modules to handle all types of data it can work
with. Loading modules at runtime can also provide flexible interfaces for
perl modules. Modules can let the programmer decide what modules will be
used by it instead of hard-coding their names.

%prep
%setup -q -n Class-Loader-%{version}

%build
%{__perl} Makefile.PL INSTALLDIRS=vendor
make %{?_smp_mflags}

%install
rm -rf $RPM_BUILD_ROOT

make pure_install PERL_INSTALL_ROOT=$RPM_BUILD_ROOT

find $RPM_BUILD_ROOT -type f -name .packlist -exec rm -f {} \;
find $RPM_BUILD_ROOT -depth -type d -exec rmdir {} 2>/dev/null \;

%{_fixperms} $RPM_BUILD_ROOT/*

%check
make test

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-,root,root,-)
%doc ARTISTIC Changes
%{perl_vendorlib}/*
%{_mandir}/man3/*

%changelog
* Thu Mar 08 2018 Your Name <wwright@nice.com> 2.03-1
- Specfile autogenerated by cpanspec 1.78.
